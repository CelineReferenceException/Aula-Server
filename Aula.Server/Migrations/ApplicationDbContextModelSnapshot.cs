// <auto-generated />
using System;
using Aula.Server.Common.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aula.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Aula.Server.Domain.Bans.Ban", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("ExecutorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("TargetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TargetId")
                        .HasDatabaseName("IX_Ban_TargetId");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("Aula.Server.Domain.Messages.Message", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Flags")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Aula.Server.Domain.Messages.MessageUserJoin", b =>
                {
                    b.Property<long>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageId");

                    b.ToTable("Messages_MessageUserJoin", (string)null);
                });

            modelBuilder.Entity("Aula.Server.Domain.Messages.MessageUserLeave", b =>
                {
                    b.Property<long>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageId");

                    b.ToTable("Messages_MessageUserLeave", (string)null);
                });

            modelBuilder.Entity("Aula.Server.Domain.Rooms.Room", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEntrance")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Aula.Server.Domain.Rooms.RoomConnection", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("SourceRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("TargetRoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceRoomId");

                    b.ToTable("RoomConnections");
                });

            modelBuilder.Entity("Aula.Server.Domain.Users.User", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("CurrentRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LockoutEndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("Permissions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Presence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_User_Email");

                    b.HasIndex("UserName")
                        .HasDatabaseName("IX_User_UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Aula.Server.Domain.Messages.MessageUserJoin", b =>
                {
                    b.HasOne("Aula.Server.Domain.Messages.Message", "Message")
                        .WithOne("JoinData")
                        .HasForeignKey("Aula.Server.Domain.Messages.MessageUserJoin", "MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Aula.Server.Domain.Messages.MessageUserLeave", b =>
                {
                    b.HasOne("Aula.Server.Domain.Messages.Message", "Message")
                        .WithOne("LeaveData")
                        .HasForeignKey("Aula.Server.Domain.Messages.MessageUserLeave", "MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Aula.Server.Domain.Rooms.RoomConnection", b =>
                {
                    b.HasOne("Aula.Server.Domain.Rooms.Room", "SourceRoom")
                        .WithMany("Connections")
                        .HasForeignKey("SourceRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SourceRoom");
                });

            modelBuilder.Entity("Aula.Server.Domain.Messages.Message", b =>
                {
                    b.Navigation("JoinData");

                    b.Navigation("LeaveData");
                });

            modelBuilder.Entity("Aula.Server.Domain.Rooms.Room", b =>
                {
                    b.Navigation("Connections");
                });
#pragma warning restore 612, 618
        }
    }
}
